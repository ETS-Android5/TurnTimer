name: $(Rev:_r)

jobs:
  - job: AndroidTestCIPipeline
    steps:
      - checkout: self
        displayName: Checkout GitHub Repository
        clean: true
        persistCredentials: true

      - script: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-27;google_apis;x86' --force
          $ANDROID_HOME/emulator/emulator -list-avds
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
        displayName: Launch Emulator

      - script: |
          ./gradlew connectedDebugAndroidTest --stacktrace
          ./gradlew --stop
        displayName: Run Unit Tests
        continueOnError: true

      - script: |
          echo "##vso[task.setvariable variable=ReleaseVersion;isOutput=true]`grep 'versionName' $(Root)/app/build.gradle | tr '"' ' ' | tr 'versionName' ' '| sed 's/ //g'`"
        displayName: Read Release Version
        name: ReadReleaseVersion

  - job: AndroidReleaseCDPipeline
    dependsOn: AndroidTestCIPipeline
    variables:
      Version: $[ dependencies.AndroidTestCIPipeline.outputs['ReadReleaseVersion.ReleaseVersion'] ]
      Condition: $[ counter(variables['Version'], 0) ]

    steps:
      - script: |
          echo "##vso[build.updatebuildnumber]$(Version)_$(Condition)"
        displayName: Update Run Name

      - checkout: self
        displayName: Checkout GitHub Repository
        condition: eq(variables['Condition'], 0)
        clean: true
        persistCredentials: true

      - task: Gradle@2
        displayName: Gradle Build Release APK
        condition: eq(variables['Condition'], 0)
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'assembleRelease'

      - task: AndroidSigning@2
        displayName: Sign APK
        condition: eq(variables['Condition'], 0)
        inputs:
          apkFiles: '$(Root)$(ReleaseDirectory)/*.apk'
          jarsign: true
          jarsignerKeystoreFile: 'duu_whang_keystore.keystore'
          jarsignerKeystorePassword: '$(Release.Keystore.Password)'
          jarsignerKeystoreAlias: 'duu_whang_release_key'
          jarsignerKeyPassword: '$(Release.Key.Password)'
          jarsignerArguments: '-verbose -sigalg SHA256withECDSA'
          zipalign: true

      - task: CopyFiles@2
        displayName: Copy APK to Root
        condition: eq(variables['Condition'], 0)
        inputs:
          sourceFolder: '$(Root)$(ReleaseDirectory)/'
          Contents: '*.apk'
          TargetFolder: '$(Root)/'
          OverWrite: true

      - script: |
          git config user.email "maxipulstorm@aon.at"
          git config user.name "duuwhang"
          git checkout master
          git add .
          git commit -m "CD commit"
          git push origin
          git tag $(Version)
          git push origin --tags
        displayName: Commit APK to GitHub Repository
        condition: eq(variables['Condition'], 0)

      - task: GitHubRelease@0
        displayName: Create GitHub Release
        condition: eq(variables['Condition'], 0)
        inputs:
          gitHubConnection: github.com_duuwhang
          repositoryName: duuwhang/TurnTimer
          action: create
          target: '$(Build.SourceVersion)'
          tagSource: manual
          tagPattern: 'Git tag'
          tag: '$(Version)'
          title: 'TurnTimer Version $(Version)'
          assets: '$(Root)$(ReleaseDirectory)/*.apk'
          #releaseNotesSource: 'file' # Optional. Options: file, input
          #releaseNotesFile: # Optional
          #releaseNotes: # Optional
